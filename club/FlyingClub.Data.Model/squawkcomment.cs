//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace FlyingClub.Data.Model
{
    public partial class squawkcomment
    {
        #region Primitive Properties
    
        public virtual long Id
        {
            get;
            set;
        }
    
        public virtual long SquawkId
        {
            get { return _squawkId; }
            set
            {
                if (_squawkId != value)
                {
                    if (squawk != null && squawk.Id != value)
                    {
                        squawk = null;
                    }
                    _squawkId = value;
                }
            }
        }
        private long _squawkId;
    
        public virtual System.DateTime PostedOn
        {
            get;
            set;
        }
    
        public virtual long PosterId
        {
            get { return _posterId; }
            set
            {
                if (_posterId != value)
                {
                    if (member != null && member.Id != value)
                    {
                        member = null;
                    }
                    _posterId = value;
                }
            }
        }
        private long _posterId;
    
        public virtual string Text
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual member member
        {
            get { return _member; }
            set
            {
                if (!ReferenceEquals(_member, value))
                {
                    var previousValue = _member;
                    _member = value;
                    Fixupmember(previousValue);
                }
            }
        }
        private member _member;
    
        public virtual squawk squawk
        {
            get { return _squawk; }
            set
            {
                if (!ReferenceEquals(_squawk, value))
                {
                    var previousValue = _squawk;
                    _squawk = value;
                    Fixupsquawk(previousValue);
                }
            }
        }
        private squawk _squawk;

        #endregion
        #region Association Fixup
    
        private void Fixupmember(member previousValue)
        {
            if (previousValue != null && previousValue.squawkcomments.Contains(this))
            {
                previousValue.squawkcomments.Remove(this);
            }
    
            if (member != null)
            {
                if (!member.squawkcomments.Contains(this))
                {
                    member.squawkcomments.Add(this);
                }
                if (PosterId != member.Id)
                {
                    PosterId = member.Id;
                }
            }
        }
    
        private void Fixupsquawk(squawk previousValue)
        {
            if (previousValue != null && previousValue.squawkcomments.Contains(this))
            {
                previousValue.squawkcomments.Remove(this);
            }
    
            if (squawk != null)
            {
                if (!squawk.squawkcomments.Contains(this))
                {
                    squawk.squawkcomments.Add(this);
                }
                if (SquawkId != squawk.Id)
                {
                    SquawkId = squawk.Id;
                }
            }
        }

        #endregion
    }
}
